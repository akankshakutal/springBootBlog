[
  {
    "title": "JVM memory Management",
    "date": "2019-10-10",
    "content": [
      {
        "topic": "Young Generation :",
        "diagramPath": "https://i2.wp.com/betsol.com/wp-content/uploads/2017/06/java-memory-management-1.jpg?resize=870%2C362&ssl=1",
        "text": "Place where all the new objects are created.\nWhen the young generation is filled, garbage collection is performed called Minor GC.\nYoung Generation is divided into three parts – Eden Memory and second Survivor Memory spaces.\nMost of the newly created objects are located in the Eden memory space.\nWhen Eden space is filled with objects, Minor GC is performed and all the survivor objects are moved to one of the survivor spaces.\nMinor GC also checks the survivor objects and move them to the other survivor space.\nSo at a time, one of the survivor space is always empty.\nObjects that are survived after many cycles of GC, are moved to the Old generation memory space.\nUsually, it’s done by setting a threshold for the age ofthe young generation objects before they become eligible to promote to Old generation."
      },
      {
        "topic": " Old Generation :",
        "text": "Old Generation memory contains the objects that are long-lived and survived after many rounds of Minor GC. Usually, garbage collection is performed in Old Generation memory when it’s full. Old Generation Garbage Collection is called Major GC and usually takes a longer time."
      },
      {
        "topic": "Java Memory Model",
        "subtopics": [
          {
            "topic": "Permanent Generation",
            "codeSnippet": "",
            "text": "It contains the application metadata required by the JVM to describe the classes and methods used in the application. Note that  Permanent Generation is not part of Java heap memory.Perm Gen is populated by JVM at runtime based on the classes used by the application. Perm Gen also contains Java SE library classes and methods.Perm Gen objects are garbage collected in a full garbage collection."
          },
          {
            "topic": "Method Area",
            "codeSnippet": "",
            "text": "Method Area is part of space in the Perm Gen and used to store class structure (runtime constants and static variables) and code for methods and constructors."
          },
          {
            "topic": "Memory Pool",
            "codeSnippet": "",
            "text": "Memory Pools are created by JVM memory managers to create a pool of immutable objects if the implementation supports it. String Pool is a good example of this kind of memory pool. Memory Pool can belong to Heap or Perm Gen, depending on the JVM memory manager implementation."
          },
          {
            "topic": "Runtime Constant Pool",
            "codeSnippet": "",
            "text": "Runtime constant pool is per-class runtime representation of constant pool in a class. It contains class runtime constants and static methods. Runtime constant pool is part of the method area."
          },
          {
            "topic": " Java Stack Memory",
            "codeSnippet": "",
            "text": "Java Stack memory is used for execution of a thread. They contain method specific values that are short-lived and references to other objects in the heap that is getting referred from the method."
          }
        ]
      }
    ]
  }
]
